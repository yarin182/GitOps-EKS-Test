apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: traefik
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: traefik.io/ingress-controller
---
apiVersion: v1
kind: Namespace
metadata:
  name: traefik
  labels: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: traefik
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: traefik
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik
  namespace: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
      annotations: {}
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.10
          args:
            - --api.insecure
            - --accesslog
            - --accesslog.filepath=/var/log/traefik/access.log
            - --log
            - --log.filepath=/var/log/traefik/traefik.log
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --providers.kubernetesingress
            - --providers.kubernetesingress.ingressclass=traefik
            - --providers.kubernetesingress.allowexternalnameservices=true
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
            - name: traefik-logs
              mountPath: /var/log/traefik
      volumes:
        - name: traefik-logs
          emptyDir: {}
---
kind: Service
apiVersion: v1
metadata:
  name: traefik
  namespace: traefik
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 443
      name: websecure
    - protocol: TCP
      port: 8080
      name: admin
  selector:
    app: traefik
---
# Ingress for ArgoCD
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.stripprefix.prefixes: "/argocd"
spec:
  rules:
    - http:
        paths:
          - path: /argocd
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80
---
# Ingress for Kiali
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kiali-ingress
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.stripprefix.prefixes: "/kiali"
spec:
  rules:
    - http:
        paths:
          - path: /kiali
            pathType: Prefix
            backend:
              service:
                name: kiali
                port:
                  number: 20001
---
# Ingress for Prometheus
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-ingress
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.stripprefix.prefixes: "/prometheus"
spec:
  rules:
    - http:
        paths:
          - path: /prometheus
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090
---

---
# Service for ArgoCD
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: traefik
spec:
  type: ExternalName
  externalName: argocd-server.argocd.svc.cluster.local
  ports:
    - port: 80
      targetPort: 80
---
# Service for Kiali
apiVersion: v1
kind: Service
metadata:
  name: kiali
  namespace: traefik
spec:
  type: ExternalName
  externalName: kiali.istio-system.svc.cluster.local
  ports:
    - port: 20001
      targetPort: 20001
---
# Service for Prometheus
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: traefik
spec:
  type: ExternalName
  externalName: prometheus-server.monitor.svc.cluster.local
  ports:
    - port: 9090
      targetPort: 9090 
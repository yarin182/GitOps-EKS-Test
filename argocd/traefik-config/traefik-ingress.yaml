apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: traefik
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: traefik.io/ingress-controller
---
apiVersion: v1
kind: Namespace
metadata:
  name: traefik
  labels: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: traefik
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: traefik
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik
  namespace: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
      annotations: {}
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.10
          args:
            - --api.insecure
            - --accesslog
            - --accesslog.filepath=/var/log/traefik/access.log
            - --log
            - --log.filepath=/var/log/traefik/traefik.log
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --providers.file.directory=/etc/traefik/dynamic
            - --providers.file.watch=true
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
            - name: traefik-logs
              mountPath: /var/log/traefik
            - name: traefik-config
              mountPath: /etc/traefik/dynamic
      volumes:
        - name: traefik-logs
          emptyDir: {}
        - name: traefik-config
          configMap:
            name: traefik-config
---
kind: Service
apiVersion: v1
metadata:
  name: traefik
  namespace: traefik
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 443
      name: websecure
    - protocol: TCP
      port: 8080
      name: admin
  selector:
    app: traefik
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: traefik
data:
  argocd.yml: |
    http:
      routers:
        argocd:
          rule: "PathPrefix(`/argocd`)"
          service: argocd
          entryPoints:
            - web
          middlewares:
            - argocd-stripprefix
        kiali:
          rule: "PathPrefix(`/kiali`)"
          service: kiali
          entryPoints:
            - web

      middlewares:
        argocd-stripprefix:
          stripPrefix:
            prefixes:
              - "/argocd"


      services:
        argocd:
          loadBalancer:
            servers:
              - url: "http://argocd-server.argocd.svc.cluster.local:80"
        kiali:
          loadBalancer:
            servers:
              - url: "http://kiali.istio-system.svc.cluster.local:20001"

---
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: traefik
spec:
  type: ExternalName
  externalName: argocd-server.argocd.svc.cluster.local
  ports:
    - port: 80
      targetPort: 80 